# -*- coding: utf-8 -*-
#
# This file is part of CERN Open Data Portal.
# Copyright (C) 2015, 2016, 2017, 2018, 2021, 2022, 2023 CERN.
#
# CERN Open Data Portal is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# CERN Open Data Portal is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CERN Open Data Portal; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307, USA.
#
# In applying this license, CERN does not
# waive the privileges and immunities granted to it by virtue of its status
# as an Intergovernmental Organization or submit itself to any jurisdiction.

x-common-variables: &common-variables
  INVENIO_ACCOUNTS_REGISTER_BLUEPRINT: None
  INVENIO_ACCOUNTS_SESSION_REDIS_URL: redis://cache:6379/1
  INVENIO_BROKER_URL: amqp://guest:guest@mq:5672/ # Celery 3
  INVENIO_CACHE_REDIS_HOST: cache
  INVENIO_CACHE_REDIS_URL: redis://cache:6379/0
  INVENIO_CELERY_BROKER_URL: amqp://guest:guest@mq:5672/ # Celery 4
  INVENIO_CELERY_RESULT_BACKEND: redis://cache:6379/2
  INVENIO_SEARCH_CLIENT_CONFIG: '{"use_ssl":True, "verify_certs":False, "http_auth":"admin:4DFc4Gaa4LZ3"}'
  INVENIO_SEARCH_HOSTS: https://search:9200
  INVENIO_SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://cernopendata:dbpass123@db:5432/cernopendata
  INVENIO_PIDSTORE_DATACITE_DOI_PREFIX: 10.5072
  INVENIO_PIDSTORE_DATACITE_PASSWORD: CHANGE_ME
  INVENIO_PIDSTORE_DATACITE_TESTMODE: None
  INVENIO_PIDSTORE_DATACITE_USERNAME: CERN.OPENDATA
  INVENIO_PIDSTORE_LANDING_BASE_URL: http://opendata.cern.ch/record/

services:
  web:
    restart: "always"
    build:
      context: .
    image: cernopendata/web
    depends_on:
      search:
        condition: service_healthy
      db:
        condition: service_started
    environment: *common-variables
    volumes:
      - web_data:/opt/invenio/var/instance/static
    links:
      - db
      - search
    ports:
      - 5000:5000
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:5000 || exit -1"]
      interval: 600s
      timeout: 60s
      retries: 5
      start_period: 80s

  web-files:
    restart: "always"
    image: cernopendata/web
    depends_on:
      - web
      - mq
      - cache
    environment: *common-variables
    volumes:
      - web_data:/opt/invenio/var/instance/static
    links:
      - db
      - cache
      - search
      - mq
    ports:
      - 5001:5000
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:5000 || exit -1"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  db:
    restart: "always"
    image: docker.io/library/postgres:14.15
    environment:
      - POSTGRES_USER=cernopendata
      - POSTGRES_DB=cernopendata
      - POSTGRES_PASSWORD=dbpass123
    ports:
      - "5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d cernopendata -U cernopendata || exit -1"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  cache:
    restart: "always"
    image: docker.io/library/redis:7
    ports:
      - "6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  search:
    restart: "always"
    image: docker.io/opensearchproject/opensearch:2
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=4DFc4Gaa4LZ3
      - reindex.remote.whitelist=os-opendata-sandbox.cern.ch:443
      - reindex.ssl.verification_mode=none
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data/
    ports:
      - 9200:9200
    healthcheck:
      test: ["CMD-SHELL", "curl -k -u admin:4DFc4Gaa4LZ3 --silent --fail https://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  opensearch-dashboards:
    image: docker.io/opensearchproject/opensearch-dashboards:2 # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      OPENSEARCH_HOSTS: '["https://search:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
    depends_on:
      search:
        condition: service_healthy

  mq:
    restart: "always"
    image: docker.io/library/rabbitmq:3.12
    depends_on:
     - cache
    ports:
      - "4369"
      - "5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  proxy:
    restart: "always"
    build: ./nginx
    image: cernopendata/nginx:1.22
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web_data:/opt/invenio/var/instance/static
    links:
      - web
      - web-files

  worker:
    restart: "unless-stopped"
    image: cernopendata/web
    depends_on:
      - web
      - mq
      - cache
    command: bash -c "celery -A cernopendata.celery worker --beat --loglevel=INFO --concurrency=1"
    environment: *common-variables
    volumes:
      - ./cernopendata:/code/cernopendata
      - ./scripts:/code/scripts
      - web_data:/opt/invenio/var/instance/static
    links:
      - db
      - cache
      - search
      - mq

volumes:
  web_data:
  postgresql_data:
  opensearch_data:
